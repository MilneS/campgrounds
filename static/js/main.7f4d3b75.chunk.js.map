{"version":3,"sources":["pages/Details.module.css","pages/Home.module.css","comps/CampsCard.module.css","pages/NewCamp.module.css","comps/LoginComp.module.css","comps/SignupComp.module.css","comps/NavbarComp.module.css","comps/Edit.module.css","pages/Camps.module.css","pages/Login.module.css","pages/Home.tsx","firebase/firebase.ts","comps/CampCard.tsx","pages/Camps.tsx","utils/LoginPic.jpeg","comps/LoginComp.tsx","comps/SignupComp.tsx","pages/Login.tsx","pages/NewCamp.tsx","comps/NavbarComp.tsx","comps/Edit.tsx","pages/Details.tsx","App.tsx","reportWebVitals.js","store/index.tsx","index.tsx"],"names":["module","exports","Home","className","classes","background","main","nav","ul","logolink","to","link","loginLink","middleContainer","title","message","homeButton","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","CampCard","props","useState","itemImage","setItemImage","item","dataKey","useEffect","storage","ref","child","getDownloadURL","then","url","catch","error","console","log","JSON","stringify","container","containerImg","src","alt","img","containerInfo","description","location","button","Button","variant","size","type","buttonSmall","Camps","dispatch","useDispatch","isLoggedin","useSelector","state","allData","allCamps","getAllCamps","addHandler","a","process","fetch","method","response","ok","json","data","payload","titleContainer","h1","h2","onClick","Object","keys","length","map","index","allCampsData","LoginComp","logginFromCampsBtn","logginFromCamps","history","useHistory","errMsg","setErrMsg","showErrMsg","setShowErrMsg","emailBig","emailSmall","passwordBig","passwordSmall","inputData","setInputData","showSignupFunc","e","preventDefault","getInputDataHandler","target","id","currentTarget","value","getFormDataHandler","sendDataHandler","body","email","password","returnSecureToken","headers","idToken","localStorage","setItem","replace","push","errorMessage","bigCard","Card","style","width","Img","pic","Body","Title","login","errorMsg","Form","Group","Control","placeholder","onChange","signUp","smallCard","SignupComp","showLoginHandler","signup","Login","showLogin","showSignup","cardContainer","card","NewCamp","author","getItem","authorData","loginFormData","initialData","price","imageAsFile","setImageAsFile","newCampDataHandler","dataName","name","getImageDataHandler","files","file","validated","setValidated","buttonDisabled","setButtonDisabled","storageRef","put","checkValidity","stopPropagation","containerBig","form","noValidate","Label","htmlFor","required","as","rows","disabled","containerSmall","NavbarComp","btnHandler","setExpanded","expanded","Navbar","fixed","collapseOnSelect","expand","bg","navbar","Container","campgroundsLogo","Toggle","Collapse","Nav","campgroundsLink","activeClassName","active","token","removeItem","Edit","campData","campId","campFunc","getCampFunc","cancelHandler","defaultState","enterredData","setEnterredData","enterredDataHandler","sendUpdateHandler","database","update","payloadData","defaultValue","Details","authorEmail","params","useParams","showEditComp","showEdit","comment","inputValue","setInputValue","commButtonDisabled","setCommButtonDisabled","currentCampId","setCurrentCampId","allComments","setAllComments","comments","currentCamp","setCurrentCamp","getCamp","find","camp","allComm","comm","key","newComm","newCommentHandler","newCommentApi","trim","sendFormDataHandler","deleteCommentHandler","dbRef","commentId","remove","cardButtons","reviewBtn","delete","Text","DescrAuthPrice","ListGroup","ListGroupItem","reviewContainer","titleReview","textareaTitle","reviewForm","submitReviewBtn","NoCommentsMsg","commCont","reviewCard","authorReview","deleteReviewButton","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","showDetails","userId","store","createStore","action","signUpFormData","newCampsState","updatedCampsState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f4d3b75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Details_container__2Oj6o\",\"cardButtons\":\"Details_cardButtons__1mp0R\",\"img\":\"Details_img__2FBxc\",\"title\":\"Details_title__OugfD\",\"DescrAuthPrice\":\"Details_DescrAuthPrice__34iBY\",\"location\":\"Details_location__3rk2w\",\"reviewContainer\":\"Details_reviewContainer__3WnDJ\",\"titleReview\":\"Details_titleReview__3SPSe\",\"textareaTitle\":\"Details_textareaTitle__2cjpH\",\"textarea\":\"Details_textarea__2nz_6\",\"reviewCard\":\"Details_reviewCard__2K-Uh\",\"cardSmall\":\"Details_cardSmall__28Mj2\",\"card\":\"Details_card__25dEN\",\"NoCommentsMsg\":\"Details_NoCommentsMsg__1eNcn\",\"warning\":\"Details_warning__EDbfE\",\"reviewBtn\":\"Details_reviewBtn__2Cpwn\",\"submitReviewBtn\":\"Details_submitReviewBtn__1mndp\",\"deleteReviewButton\":\"Details_deleteReviewButton__GZ1DP\",\"authorReview\":\"Details_authorReview__2U1bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Home_background__3HbSX\",\"middleContainer\":\"Home_middleContainer__qPjjp\",\"title\":\"Home_title__3h164\",\"message\":\"Home_message__3Y9k4\",\"homeButton\":\"Home_homeButton__QywTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CampsCard_container__e7ffi\",\"img\":\"CampsCard_img__3sxmh\",\"containerInfo\":\"CampsCard_containerInfo__3JXPw\",\"title\":\"CampsCard_title__1tu2g\",\"description\":\"CampsCard_description__38J2C\",\"location\":\"CampsCard_location__19D1b\",\"button\":\"CampsCard_button__1Jnu4\",\"buttonSmall\":\"CampsCard_buttonSmall__2Rl_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerBig\":\"NewCamp_containerBig__1cORp\",\"form\":\"NewCamp_form__2zNpO\",\"h1\":\"NewCamp_h1__2iugb\",\"button\":\"NewCamp_button__3TkYp\",\"containerSmall\":\"NewCamp_containerSmall__2wM-6\",\"h2\":\"NewCamp_h2__1seBp\",\"file\":\"NewCamp_file__1i_Fo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginComp_login__2Nr3o\",\"signUp\":\"LoginComp_signUp__3pJBo\",\"errorMsg\":\"LoginComp_errorMsg__2oOW3\",\"smallCard\":\"LoginComp_smallCard__2zLBS\",\"bigCard\":\"LoginComp_bigCard__2jDlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup\":\"SignupComp_signup__1F1p1\",\"login\":\"SignupComp_login__2CWFt\",\"errorMsg\":\"SignupComp_errorMsg__3DF0s\",\"smallCard\":\"SignupComp_smallCard__2rrC-\",\"bigCard\":\"SignupComp_bigCard__3lSZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavbarComp_navbar__2raUi\",\"campgroundsLogo\":\"NavbarComp_campgroundsLogo__3Wnzz\",\"campgroundsLink\":\"NavbarComp_campgroundsLink__c5qYo\",\"loginLink\":\"NavbarComp_loginLink__152zl\",\"active\":\"NavbarComp_active__KQnEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerBig\":\"Edit_containerBig__2koeC\",\"form\":\"Edit_form__UvPpR\",\"h1\":\"Edit_h1__3kTf6\",\"button\":\"Edit_button__3vqQL\",\"containerSmall\":\"Edit_containerSmall__1irxs\",\"h2\":\"Edit_h2__2rXIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Camps_container__2FW0O\",\"h1\":\"Camps_h1__7jZsE\",\"h2\":\"Camps_h2__3_D6w\",\"button\":\"Camps_button__3Z1wg\",\"buttonSmall\":\"Camps_buttonSmall__1dk-m\",\"titleContainer\":\"Camps_titleContainer__3KJQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Login_cardContainer__nypt3\",\"card\":\"Login_card__1SygN\"};","import classes from \"./Home.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div className={classes.background}>\n      <div className={classes.main}>\n        <div className={classes.nav}>\n          <ul className={classes.ul}>\n            <div className={classes.logolink}>CampGrounds</div>\n            <NavLink to=\"/campgrounds/camps\" className={classes.link}>\n              All campgrounds\n            </NavLink>\n            <NavLink to=\"/campgrounds/login\" className={classes.loginLink}>\n              Login\n            </NavLink>\n          </ul>\n        </div>\n        <div className={classes.middleContainer}>\n          <h1 className={classes.title}>CampGrounds</h1>\n          <div className={classes.message}>\n            <p>\n              Welcome to CampGrounds! <br />\n              Jump right in and explore our many campgrounds. <br /> Login or sign up\n              to share some of your own and comment on others!\n            </p>\n          </div>\n          <NavLink to=\"/campgrounds/camps\">\n            <button className={classes.homeButton}>View Campgrounds</button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/firebase-database\";\n\ninterface FbConf {\n  apiKey: string,\n  authDomain: string,\n  databaseURL: string,\n  projectId: string,\n  storageBucket: string,\n  messagingSenderId: string,\n  appId: string,\n  measurementId: string,\n}\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig:FbConf = {\n  apiKey: \"AIzaSyARuiSwVM9zIxDFozL5bILtQJOzUP-SbLk\",\n  authDomain: \"campgrounds-daabb.firebaseapp.com\",\n  databaseURL: \"https://campgrounds-daabb-default-rtdb.firebaseio.com\",\n  projectId: \"campgrounds-daabb\",\n  storageBucket: \"campgrounds-daabb.appspot.com\",\n  messagingSenderId: \"939628795347\",\n  appId: \"1:939628795347:web:643c09cd414dfe13b2cb26\",\n  measurementId: \"G-4KSK6ZMC4Y\",\n};\n\nexport const app = firebase.initializeApp(firebaseConfig);","import classes from \"./CampsCard.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { app } from \"../firebase/firebase\";\n\n\ninterface propsTypes {\n  dataKey: string,\n  item: {\n    author: string,\n    description: string,\n    location: string,\n    price: string,\n    title: string,\n  };\n}\nconst CampCard = (props: propsTypes) => {\n  const [itemImage, setItemImage] = useState<string>();\n  const item = props.item;\n  const dataKey = props.dataKey;\n\n  useEffect(() => {\n    let storageRef:firebase.storage.Reference = app.storage().ref();\n    let fileRef: firebase.storage.Reference= storageRef.child(`images/${dataKey}`);\n    fileRef\n      .getDownloadURL()\n      .then(function (url:string) {\n        setItemImage(url);\n      })\n      .catch((error:Error) =>\n        console.log(`Getting image failed on campCard ${JSON.stringify(error.message)}`)\n      );\n  }, [props.item]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.containerImg}>\n        <img src={itemImage} alt=\"\" className={classes.img} />\n      </div>\n      <div className={classes.containerInfo}>\n        <div>\n          <div className={classes.title}>{item.title}</div>\n          <div className={classes.description}>{item.description}</div>\n          <div className={classes.location}>{item.location}</div>\n        </div>\n        <div className={classes.button}>\n          <NavLink to={`/campgrounds/details/${dataKey}`}>\n            <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"mb-3\">\n              View\n            </Button>\n          </NavLink>\n        </div>\n        <div className={classes.buttonSmall}>\n          <NavLink to={`/campgrounds/details/${dataKey}`}>\n            <Button variant=\"primary\" size=\"sm\" type=\"button\" className=\"mb-3\">\n              View\n            </Button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CampCard;\n","import classes from \"./Camps.module.css\";\nimport CampCard from \"../comps/CampCard\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CampCollection, State } from \"../store/state.model\";\nimport { useEffect } from \"react\";\n\nconst Camps = () => {\n  const dispatch = useDispatch();\n  const isLoggedin: boolean = useSelector((state: State) => state.isLoggedin);\n  const allData:CampCollection = useSelector((state: State) => state.allCamps);\n\n  useEffect(() => {\n    getAllCamps();\n  }, []);\n\n  const addHandler = () => {\n    dispatch({ type: \"logginFromCampsBtn\" });\n  };\n\n  const getAllCamps = async () => {\n    const allCampsApi: string = process.env.REACT_APP_API_CAMPS || '';\n    const response: Response = await fetch(allCampsApi, {\n      method: \"GET\",\n    });\n    if (response.ok) {\n      const data = await response.json();\n      dispatch({ type: \"setAllCamps\", payload: data });\n    } else {\n      let errorMessage: string = \"Getting all camps failed!\";\n      console.log(errorMessage);\n    }\n  };\n\n  const allCampsData = () => {\n    if (Object.keys(allData).length) {\n      return Object.keys(allData).map((item, index) => {\n        return <CampCard key={index} item={allData[item]} dataKey={item} />;\n      });\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.titleContainer}>\n        <h1 className={classes.h1}>All CampGrounds</h1>\n        <h2 className={classes.h2}>All CampGrounds</h2>\n        <div className={classes.button}>\n          {isLoggedin && (\n            <NavLink to=\"/campgrounds/newcamp\">\n              <Button\n                variant=\"success\"\n                size=\"lg\"\n                type=\"button\"\n                className=\"mb-3\"\n              >\n                Add Campground\n              </Button>\n            </NavLink>\n          )}\n          {!isLoggedin && (\n            <NavLink to=\"/campgrounds/login\">\n              <Button\n                variant=\"success\"\n                size=\"lg\"\n                type=\"button\"\n                className=\"mb-3\"\n                onClick={addHandler}\n              >\n                Add Campground\n              </Button>\n            </NavLink>\n          )}\n        </div>\n        <div className={classes.buttonSmall}>\n          {isLoggedin && (\n            <NavLink to=\"/campgrounds/newcamp\">\n              <Button\n                variant=\"success\"\n                size=\"sm\"\n                type=\"button\"\n                className=\"mb-3\"\n              >\n                Add Campground\n              </Button>\n            </NavLink>\n          )}\n          {!isLoggedin && (\n            <NavLink to=\"/campgrounds/login\">\n              <Button\n                variant=\"success\"\n                size=\"sm\"\n                type=\"button\"\n                className=\"mb-3\"\n                onClick={addHandler}\n              >\n                Add Campground\n              </Button>\n            </NavLink>\n          )}\n        </div>\n      </div>\n      {allCampsData()}\n    </div>\n  );\n};\nexport default Camps;\n","export default __webpack_public_path__ + \"static/media/LoginPic.e44accc1.jpeg\";","import classes from \"./LoginComp.module.css\";\nimport pic from \"../utils/LoginPic.jpeg\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { State } from \"../store/state.model\";\n\nconst LoginComp = () => {\n  const logginFromCampsBtn:boolean = useSelector(\n    (state: State) => state.logginFromCamps\n  );\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [errMsg, setErrMsg] = useState<string>();\n  const [showErrMsg, setShowErrMsg] = useState<boolean>(false);\n  const initialData = {\n    emailBig: \"\",\n    emailSmall: \"\",\n    passwordBig: \"\",\n    passwordSmall: \"\",\n  };\n  const [inputData, setInputData] = useState(initialData);\n\n  const showSignupFunc = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"signupComp\" });\n  };\n\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputData({ ...inputData, [e.target.id]: e.currentTarget.value });\n  };\n\n  const getFormDataHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"loginFormData\", payload: inputData });\n    sendDataHandler();\n  };\n\n  const sendDataHandler = async () => {\n    // fix type\n    const url: string = process.env.REACT_APP_API_LOGIN_KEY || \"\";\n    let response: Response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: inputData.emailBig || inputData.emailSmall,\n        password: inputData.passwordBig || inputData.passwordSmall,\n        returnSecureToken: true,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    const data = await response.json();\n    if (response.ok) {\n      dispatch({ type: \"loggedin\" });\n      dispatch({ type: \"idToken\", payload: data.idToken });\n      localStorage.setItem(\"token\", data.idToken);\n      localStorage.setItem(\"userEmail\", data.email);\n      if (logginFromCampsBtn) {\n        history.replace(\"/campgrounds/newcamp\");\n      } else {\n        history.push(\"/campgrounds/camps\");\n        dispatch({ type: \"logoutFromCampsBtn\" });\n      }\n      setShowErrMsg(false);\n      return data;\n    } else {\n      if (data && data.error && data.error.message) {\n        const errorMessage: string = data.error.message;\n        setErrMsg(errorMessage);\n        setShowErrMsg(true);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className={classes.bigCard}>\n        <Card style={{ width: \"27rem\" }}>\n          <Card.Img variant=\"top\" src={pic} />\n          <Card.Body>\n            <Card.Title className=\"mb-4\">\n              <p className={classes.login}>Login</p>\n            </Card.Title>\n            {showErrMsg && <p className={classes.errorMsg}>{errMsg}</p>}\n            <Form>\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  id=\"emailBig\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={getInputDataHandler}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  id=\"passwordBig\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={getInputDataHandler}\n                />\n              </Form.Group>\n              <div className=\"d-grid gap-2\">\n                <Button\n                  onClick={getFormDataHandler}\n                  variant=\"success\"\n                  size=\"lg\"\n                  type=\"submit\"\n                  className=\"mb-3\"\n                >\n                  Login\n                </Button>\n              </div>\n            </Form>\n            <p className={classes.signUp} onClick={showSignupFunc}>\n              Or sign up.\n            </p>\n          </Card.Body>\n        </Card>\n      </div>\n      <div className={classes.smallCard}>\n        <Card style={{ width: \"18rem\" }}>\n          <Card.Img variant=\"top\" src={pic} />\n          <Card.Body>\n            <Card.Title className=\"mb-4\">\n              <p className={classes.login}>Login</p>\n            </Card.Title>\n            {showErrMsg && <p className={classes.errorMsg}>{errMsg}</p>}\n            <Form>\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  id=\"emailSmall\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={getInputDataHandler}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  id=\"passwordSmall\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={getInputDataHandler}\n                />\n              </Form.Group>\n              <div className=\"d-grid gap-2\">\n                <Button\n                  onClick={getFormDataHandler}\n                  variant=\"success\"\n                  size=\"sm\"\n                  type=\"submit\"\n                  className=\"mb-3\"\n                >\n                  Login\n                </Button>\n              </div>\n            </Form>\n            <p className={classes.signUp} onClick={showSignupFunc}>\n              Or sign up.\n            </p>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n};\nexport default LoginComp;\n","import classes from \"./SignupComp.module.css\";\nimport pic from \"../utils/LoginPic.jpeg\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignupComp = () => {\n  const history = useHistory();\n  const initialData = { emailBig: \"\",emailSmall: \"\", passwordBig: \"\",passwordSmall: \"\" };\n  const [inputData, setInputData] = useState(initialData);\n  const [errMsg, setErrMsg] = useState<string>();\n  const [showErrMsg, setShowErrMsg] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const showLoginHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"loginComp\" });\n  };\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputData({ ...inputData, [e.target.id]: e.currentTarget.value });\n  };\n\n  const getFormDataHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"loginFormData\", payload: inputData });\n    sendDataHandler();\n  };\n\n  const sendDataHandler = async () => {\n    const url: string = process.env.REACT_APP_API_SIGNUP_KEY || '';\n    const response: Response  = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: inputData.emailBig || inputData.emailSmall,\n        password: inputData.passwordBig || inputData.passwordSmall,\n        returnSecureToken: true,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    const data = await response.json();\n    if (response.ok) {\n      dispatch({ type: \"loggedin\" });\n      dispatch({ type: \"idToken\", payload: data.idToken });\n      localStorage.setItem(\"token\", data.idToken);\n      history.push(\"/campgrounds/camps\");\n      setShowErrMsg(false);\n      return data;\n    } else {\n      if (data && data.error && data.error.message) {\n        const errorMessage: string = data.error.message;\n        setErrMsg(errorMessage);\n        setShowErrMsg(true);\n      }\n    }\n  };\n\n  return (\n    <>\n        <div className={classes.bigCard}>\n      <Card style={{ width: \"27rem\" }}>\n        <Card.Img variant=\"top\" src={pic} />\n        <Card.Body>\n          <Card.Title className=\"mb-4\">\n            <p className={classes.signup}>Sign up</p>\n          </Card.Title>\n          {showErrMsg && <p className={classes.errorMsg}>{errMsg}</p>}\n          <Form>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"email\"\n                id=\"emailBig\"\n                placeholder=\"Email\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"password\"\n                id=\"passwordBig\"\n                placeholder=\"Password\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n              <Button\n                onClick={getFormDataHandler}\n                variant=\"success\"\n                size=\"lg\"\n                type=\"submit\"\n                className=\"mb-3\"\n              >\n                Sign up\n              </Button>\n            </div>\n          </Form>\n          <p className={classes.login} onClick={showLoginHandler}>\n            Or login.\n          </p>\n        </Card.Body>\n      </Card>\n      </div>\n      <div className={classes.smallCard}>\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img variant=\"top\" src={pic} />\n        <Card.Body>\n          <Card.Title className=\"mb-4\">\n            <p className={classes.signup}>Sign up</p>\n          </Card.Title>\n          {showErrMsg && <p className={classes.errorMsg}>{errMsg}</p>}\n          <Form>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"email\"\n                id=\"emailSmall\"\n                placeholder=\"Email\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"password\"\n                id=\"passwordSmall\"\n                placeholder=\"Password\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n              <Button\n                onClick={getFormDataHandler}\n                variant=\"success\"\n                size=\"sm\"\n                type=\"submit\"\n                className=\"mb-3\"\n              >\n                Sign up\n              </Button>\n            </div>\n          </Form>\n          <p className={classes.login} onClick={showLoginHandler}>\n            Or login.\n          </p>\n        </Card.Body>\n      </Card>\n      </div>\n\n    </>\n  );\n};\nexport default SignupComp;\n","import classes from \"./Login.module.css\";\nimport LoginComp from \"../comps/LoginComp\";\nimport SignupComp from \"../comps/SignupComp\";\nimport { useSelector} from \"react-redux\";\nimport { State } from \"../store/state.model\";\n\nconst Login = () => {\n  const showLogin:boolean = useSelector((state:State) => state.showLogin);\n  const showSignup:boolean = useSelector((state:State) => state.showSignup);\n  return (\n    <div className={classes.cardContainer}>\n      <div className={classes.card}>\n        {showLogin && <LoginComp />}\n        {showSignup && <SignupComp />}\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import classes from \"./NewCamp.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../store/state.model\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { app } from \"../firebase/firebase\";\nimport File from \"../utils/file\";\n\nconst NewCamp = () => {\n  const history = useHistory();\n  const author: string | null = localStorage.getItem(\"userEmail\");\n  const authorData = useSelector((state: State) => state.loginFormData);\n  const initialData = {\n    title: \"\",\n    location: \"\",\n    price: \"\",\n    description: \"\",\n    author: author ? author : authorData.email,\n  };\n  interface initialDataType {\n    title: string;\n    location: string;\n    price: string;\n    description: string;\n    author: string;\n  }\n  const [inputData, setInputData] = useState<initialDataType>(initialData);\n  const [imageAsFile, setImageAsFile] = useState<File>();\n\n  const newCampDataHandler = async () => {\n    const newCampApi: string = process.env.REACT_APP_API_CAMPS || \"\";\n    const response: Response = await fetch(newCampApi, {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: inputData.title,\n        location: inputData.location,\n        price: inputData.price,\n        description: inputData.description,\n        author: author ? author : authorData.email,\n      }),\n    });\n    if (response.ok) {\n      const data = await response.json();\n      const dataName: string = data.name;\n\n      return dataName;\n    } else {\n      let errorMessage: string = \"Adding new camp failed!\";\n      console.log(errorMessage);\n    }\n  };\n\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n  };\n\n  const getImageDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      const file: File = e.target.files[0];\n      if (file) {\n        setImageAsFile(file);\n      }\n    }\n  };\n\n  const [validated, setValidated] = useState<boolean>(false);\n  const [buttonDisabled, setButtonDisabled] = useState<boolean>(false);\n  const getFormDataHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setButtonDisabled(true);\n    newCampDataHandler().then((dataKey: string | undefined) => {\n      if (imageAsFile && imageAsFile.name) {\n        let storageRef: firebase.storage.Reference = app.storage().ref();\n        imageAsFile.dataKey = dataKey;\n        let fileRef: firebase.storage.Reference = storageRef.child(\n          `images/${imageAsFile.dataKey}`\n        );\n        fileRef.put(imageAsFile).then(() => {\n          history.push(\"/campgrounds/camps\");\n        });\n      }\n    });\n\n    const form = e.target as HTMLTextAreaElement;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n    }\n    setValidated(true);\n  };\n\n  return (\n    <>\n      <div className={classes.containerBig}>\n        <h1 className={classes.h1}>New CampGround</h1>\n        <Form className={classes.form} noValidate validated={validated}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"title\">Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"title\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"location\">Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"location\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"price\">Campground price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              id=\"price\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-4\">\n            <Form.Label htmlFor=\"description\">Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              id=\"description\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-4\">\n            <Form.Control\n              type=\"file\"\n              id=\"image\"\n              onChange={getImageDataHandler}\n              required\n            />\n          </Form.Group>\n          <div className={classes.button}>\n            <Button\n              variant=\"success\"\n              size=\"lg\"\n              type=\"button\"\n              className=\"mb-3\"\n              onClick={getFormDataHandler}\n              disabled={buttonDisabled}\n            >\n              Add campground\n            </Button>\n          </div>\n        </Form>\n      </div>\n      <div className={classes.containerSmall}>\n        <h2 className={classes.h2}>New CampGround</h2>\n        <Form className={classes.form} noValidate validated={validated}>\n          <Form.Group className=\"mb-2\">\n            <Form.Label htmlFor=\"title\">Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"title\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\">\n            <Form.Label htmlFor=\"location\">Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"location\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\">\n            <Form.Label htmlFor=\"price\">Campground price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              id=\"price\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"description\">Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              id=\"description\"\n              onChange={getInputDataHandler}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              type=\"file\"\n              id=\"image\"\n              onChange={getImageDataHandler}\n              required\n              className={classes.file}\n            />\n          </Form.Group>\n          <div className={classes.button}>\n            <Button\n              variant=\"success\"\n              size=\"sm\"\n              type=\"button\"\n              className=\"mb-3\"\n              onClick={getFormDataHandler}\n              disabled={buttonDisabled}\n            >\n              Add campground\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default NewCamp;\n","import classes from \"./NavbarComp.module.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../store/state.model\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\n\nconst NavbarComp = () => {\n  const dispatch = useDispatch();\n  const isLoggedin:boolean = useSelector((state: State) => state.isLoggedin);\n\n  const logoutHandler = () => {\n    dispatch({ type: \"loggedout\" });\n    dispatch({ type: \"getToken\", token: null });\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userEmail\");\n    setExpanded(false);\n  };\n  \n  const loginHandler = () => {\n    dispatch({ type: \"loginComp\" });\n    setExpanded(false);\n\n  };\n  const btnHandler = () => {\n    dispatch({ type: \"logoutFromCampsBtn\" });\n    setExpanded(false);\n  };\n  const toggleHandler = () => {\n    setExpanded(!expanded);\n  };\n\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  return (\n    <>\n      <Navbar\n        fixed=\"top\"\n        collapseOnSelect\n        expand=\"lg\"\n        expanded={expanded}\n        bg=\"dark\"\n        variant=\"dark\"\n        className={classes.navbar}\n      >\n        <Container>\n          <NavLink\n            to=\"/campgrounds\"\n            className={classes.campgroundsLogo}\n            onClick={btnHandler}\n          >\n            CampGrounds\n          </NavLink>\n          <Navbar.Toggle\n            aria-controls=\"basic-navbar-nav\"\n            onClick={toggleHandler}\n          />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              \n                <NavLink\n                  onClick={btnHandler}\n                  to=\"/campgrounds/camps\"\n                  id=\"all\"\n                  className={classes.campgroundsLink}\n                  activeClassName={classes.active}\n                >\n                  All campgrounds\n                </NavLink>\n              {!isLoggedin && (\n                  <NavLink\n                    to=\"/campgrounds/login\"\n                    id=\"login\"\n                    className={classes.loginLink}\n                    activeClassName={classes.active}\n                    onClick={loginHandler}\n                  >\n                    Login\n                  </NavLink>\n              )}\n              {isLoggedin && (\n                  <NavLink\n                    to=\"/campgrounds/login\"\n                    id=\"login\"\n                    className={classes.loginLink}\n                    activeClassName={classes.active}\n                    onClick={logoutHandler}\n                  >\n                    Logout\n                  </NavLink>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\nexport default NavbarComp;\n","import classes from \"./Edit.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { app } from \"../firebase/firebase\";\n\n\ninterface propsTypes {\n  campId: string;\n  campData: {\n    author: string;\n    description: string;\n    location: string;\n    price: string;\n    title: string;\n  };\n  getCampFunc: () => Promise<void>;\n}\nconst Edit = (props: propsTypes) => {\n  const dispatch = useDispatch();\n  const campData = props.campData;\n  const campId = props.campId;\n  const campFunc = props.getCampFunc;\n\n  const cancelHandler = (e: React.MouseEvent) => {\n    dispatch({ type: \"detailsComp\" });\n  };\n\n  const defaultState = {\n    title: campData.title,\n    location: campData.location,\n    price: campData.price,\n    description: campData.description,\n  };\n  const [enterredData, setEnterredData] = useState(defaultState);\n  const enterredDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEnterredData({ ...enterredData, [e.target.id]: e.target.value });\n  };\n\n  const sendUpdateHandler = (e: React.MouseEvent) => {\n    let dbRef: firebase.database.Reference = app.database().ref();\n    dbRef\n      .child(`campgrounds/${campId}`)\n      .update({\n        title: enterredData.title,\n        location: enterredData.location,\n        price: enterredData.price,\n        description: enterredData.description,\n      })\n      .then(() => {\n        dispatch({\n          type: \"updateCamp\",\n          payload: campId,\n          payloadData: {\n            title: enterredData.title,\n            location: enterredData.location,\n            price: enterredData.price,\n            description: enterredData.description,\n          },\n        });\n\n        dispatch({ type: \"detailsComp\" });\n        campFunc();\n      })\n      .catch((error: Error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <div className={classes.containerBig}>\n        <h1 className={classes.h1}>Update CampGround</h1>\n        <Form className={classes.form}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"title\">Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"title\"\n              defaultValue={campData.title}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"location\">Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"location\"\n              defaultValue={campData.location}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"price\">Campground price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              id=\"price\"\n              defaultValue={campData.price}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-4\">\n            <Form.Label htmlFor=\"description\">Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              id=\"description\"\n              defaultValue={campData.description}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <div className={classes.button}>\n            <Button\n              onClick={sendUpdateHandler}\n              variant=\"success\"\n              size=\"lg\"\n              type=\"button\"\n              className=\"mb-3\"\n            >\n              Update\n            </Button>\n            <Button\n              onClick={cancelHandler}\n              variant=\"secondary\"\n              size=\"lg\"\n              type=\"button\"\n              className=\"mb-3\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </Form>\n      </div>\n      <div className={classes.containerSmall}>\n        <h2 className={classes.h2}>Update CampGround</h2>\n        <Form className={classes.form}>\n          <Form.Group className=\"mb-2\">\n            <Form.Label htmlFor=\"title\">Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"title\"\n              defaultValue={campData.title}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\">\n            <Form.Label htmlFor=\"location\">Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"location\"\n              defaultValue={campData.location}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\">\n            <Form.Label htmlFor=\"price\">Campground price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              id=\"price\"\n              defaultValue={campData.price}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"description\">Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              id=\"description\"\n              defaultValue={campData.description}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <div className={classes.button}>\n            <Button\n              onClick={sendUpdateHandler}\n              variant=\"success\"\n              size=\"sm\"\n              type=\"button\"\n              className=\"mb-3\"\n            >\n              Update\n            </Button>\n            <Button\n              onClick={cancelHandler}\n              variant=\"secondary\"\n              size=\"sm\"\n              type=\"button\"\n              className=\"mb-3\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Edit;\n","import classes from \"./Details.module.css\";\nimport Edit from \"../comps/Edit\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Camp,\n  CampCollection,\n  State,\n  CommentCollection,\n} from \"../store/state.model\";\nimport { app } from \"../firebase/firebase\";\n\nconst Details = () => {\n  // -------------------------------------------------------------------- LOCAL STORAGE\n  const author: string | null = localStorage.getItem(\"userEmail\");\n  const authorEmail: string | null = localStorage.getItem(\"userEmail\");\n  // -------------------------------------------------------------------- ROUTER\n  const history = useHistory();\n  const dispatch = useDispatch();\n  interface paramsType {\n    camp: string;\n  }\n  const params: paramsType = useParams();\n  // -------------------------------------------------------------------- REDUX\n  const authorData = useSelector((state: State) => state.loginFormData);\n  const allData: CampCollection = useSelector((state: State) => state.allCamps);\n  const showEditComp: boolean = useSelector((state: State) => state.showEdit);\n  const isLoggedin = useSelector((state: State) => state.isLoggedin);\n  // -------------------------------------------------------------------- STATE\n  interface initialDataType {\n    comment: string;\n    author: string;\n    id: string;\n  }\n  const initialData = {\n    comment: \"\",\n    author: author ? author : authorData.email,\n    id: \"\",\n  };\n  const defaultData = {\n    author: \"\",\n    description: \"\",\n    location: \"\",\n    price: \"\",\n    title: \"\",\n    comments: {},\n  };\n  const [validated, setValidated] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [commButtonDisabled, setCommButtonDisabled] = useState<boolean>(false);\n  const [currentCampId, setCurrentCampId] = useState<string>(\"\");\n  const [allComments, setAllComments] = useState<initialDataType[]>([]);\n  const [itemImage, setItemImage] = useState<string>();\n  const [inputData, setInputData] = useState<initialDataType>(initialData);\n  const [currentCamp, setCurrentCamp] = useState<Camp>(defaultData);\n\n  // ------------------------------------------------------------------------------------------ FUNCS -----------------------------------------\n\n  // ----------------- FETCH: GET CAMP -----------------\n  const getCamp = async () => {\n    const allCampsApi: string = process.env.REACT_APP_API_CAMPS || \"\";\n    const response: Response = await fetch(allCampsApi, {\n      method: \"GET\",\n    });\n    if (response.ok) {\n      const data = await response.json();\n      dispatch({ type: \"setAllCamps\", payload: data });\n    } else {\n      let errorMessage: string = \"Getting all camps failed!\";\n      console.log(errorMessage);\n    }\n  };\n\n  // ----------------- CURR CAMP DATA + ID -----------------\n  useEffect(() => {\n    if (Object.keys(allData).length) {\n      const campId = Object.keys(allData).find((item) => item === params.camp);\n      if (campId) {\n        setCurrentCamp(allData[campId]);\n        setCurrentCampId(campId);\n      }\n    }\n  }, [allData]);\n\n  // ----------------- FETCH: GET IMAGE -----------------\n  const getCampImage = () => {\n    let storageRef: firebase.storage.Reference;\n    let fileRef: firebase.storage.Reference;\n    storageRef = app.storage().ref();\n    fileRef = storageRef.child(`images/${params.camp}`);\n    fileRef.getDownloadURL().then(function (url: string) {\n      setItemImage(url);\n    });\n  };\n\n  // ----------------- FIRE FETCH: GET CAMP + IMAGE -----------------\n  useEffect(() => {\n    getCamp();\n    getCampImage();\n  }, []);\n\n  // ----------------- FETCH: DELETE CAMP + IMAGE -----------------\n  const deleteHandler = (e: React.MouseEvent) => {\n    let dbRef: firebase.database.Reference = app.database().ref();\n    let storageRef: firebase.storage.Reference;\n    storageRef = app.storage().ref();\n    dbRef.child(`campgrounds/${params.camp}`).remove();\n    storageRef\n      .child(`images/${params.camp}`)\n      .delete()\n      .then(() => {\n        dispatch({ type: \"removeCamp\", payload: params.camp });\n        history.replace(\"/campgrounds/camps\");\n      })\n      .catch((error: Error) => {\n        console.log(\"error\");\n      });\n  };\n\n  // ----------------- SHOW EDIT COMP -----------------\n  const editHandler = (e: React.MouseEvent) => {\n    dispatch({ type: \"editComp\" });\n  };\n\n  // ---------------------------------------------------------------------------------- COMMENTS -----------------\n\n  // ------------- ON CHANGE: GET INPUT VALUE ----------------\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n    setInputValue(e.target.value);\n  };\n\n  // ----------------- PUSH COMMENTS TO ARRAY -----------------\n  useEffect(() => {\n    let allComm: initialDataType[] = [];\n    const comm: CommentCollection = currentCamp.comments;\n    for (const key in comm) {\n      const newComm = { ...comm[key], id: key };\n      allComm.push(newComm);\n    }\n    setAllComments(allComm);\n  }, [currentCamp]);\n\n  // ----------------- FETCH: POST COMMENT -----------------\n  const newCommentHandler = async () => {\n    const newCommentApi: string =\n      `${process.env.REACT_APP_API_COMMENTS}${currentCampId}/comments.json` ||\n      \"\";\n\n    if (inputData.comment.trim().length) {\n      const response: Response = await fetch(newCommentApi, {\n        method: \"POST\",\n        body: JSON.stringify({\n          author: author ? author : authorData.email,\n          comment: inputData.comment,\n        }),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        getCamp();\n        return data;\n      } else {\n        let errorMessage: string = \"Adding new camp failed!\";\n        console.log(errorMessage);\n      }\n    }\n  };\n\n  // ----------------- ON SUBMIT: FIRE POST COMMENT + CLEAR INPUT -----------------\n  const sendFormDataHandler = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    setCommButtonDisabled(true);\n    setInputValue(\"\");\n\n    await newCommentHandler();\n    setInputData(initialData);\n    setCommButtonDisabled(false);\n    const form = e.target as HTMLTextAreaElement;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n    }\n    setValidated(true);\n  };\n\n  // ----------------- ON CLICK: DELETE COMMENT -----------------\n  const deleteCommentHandler = async (e: React.MouseEvent) => {\n    let dbRef: firebase.database.Reference = app.database().ref();\n    const commentId: string = e.currentTarget.id;\n\n    await dbRef\n      .child(`campgrounds/${params.camp}/comments/${commentId}`)\n      .remove();\n    getCamp();\n  };\n\n  // ------------------------------------------------------------- JSX -------------------------------------------------------------\n  return (\n    <>\n      <div>\n        {!showEditComp && currentCamp && (\n          <div className={classes.container}>\n            <div>\n              {authorEmail === currentCamp.author && (\n                <div>\n                  <div className={classes.cardButtons}>\n                    <Button\n                      variant=\"primary\"\n                      type=\"button\"\n                      className={classes.reviewBtn}\n                      size=\"lg\"\n                      onClick={editHandler}\n                    >\n                      Update\n                    </Button>\n                    <Button\n                      variant=\"danger\"\n                      type=\"button\"\n                      className={classes.reviewBtn}\n                      size=\"lg\"\n                      onClick={deleteHandler}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </div>\n              )}\n              {/* ---------------------------------------------------------- CARD */}\n              <div className={classes.card}>\n                <Card style={{ width: \"40rem\" }}>\n                  <Card.Img variant=\"top\" src={itemImage} />\n                  <Card.Body>\n                    <Card.Title className={classes.title}>\n                      {currentCamp.title}\n                    </Card.Title>\n                    <Card.Text className={classes.DescrAuthPrice}>\n                      {currentCamp.description}\n                    </Card.Text>\n                  </Card.Body>\n                  <ListGroup className=\"list-group-flush\">\n                    <ListGroupItem className={classes.location}>\n                      {currentCamp.location}\n                    </ListGroupItem>\n                    <ListGroupItem className={classes.DescrAuthPrice}>\n                      Submitted by {currentCamp.author}\n                    </ListGroupItem>\n                    <ListGroupItem className={classes.DescrAuthPrice}>\n                      Price/night: ${currentCamp.price}\n                    </ListGroupItem>\n                  </ListGroup>\n                </Card>\n              </div>\n            </div>\n            {/* -------------------------------------------------------------------------REVIEW */}\n\n            <div className={classes.reviewContainer}>\n              <h1 className={classes.titleReview}>Leave a review</h1>\n\n              {isLoggedin && (\n                <div>\n                  <p className={classes.textareaTitle}>Review text</p>\n                  <Form\n                    className={classes.reviewForm}\n                    noValidate\n                    validated={validated}\n                  >\n                    <Form.Group className=\"mb-3\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        id=\"comment\"\n                        onChange={getInputDataHandler}\n                        value={inputValue}\n                        required\n                      />\n                    </Form.Group>\n                    <Button\n                      variant=\"success\"\n                      size=\"lg\"\n                      type=\"button\"\n                      className={classes.submitReviewBtn}\n                      onClick={sendFormDataHandler}\n                      disabled={commButtonDisabled}\n                    >\n                      Submit\n                    </Button>\n                  </Form>\n                </div>\n              )}\n              {allComments.length <= 0 && (\n                <div className={classes.NoCommentsMsg}>\n                  No comments available.\n                </div>\n              )}\n              <div className={classes.commCont}>\n                {allComments.length > 0 &&\n                  allComments.map((item: initialDataType, index: number) => {\n                    return (\n                      <Card key={index} className={classes.reviewCard}>\n                        <Card.Title className={classes.authorReview}>{item.author}</Card.Title>\n                        <Card.Text>{item.comment}</Card.Text>\n                        {authorEmail === item.author && (\n                          <div>\n                            <Button\n                              variant=\"danger\"\n                              type=\"button\"\n                              className={classes.deleteReviewButton}\n                              onClick={deleteCommentHandler}\n                              id={item.id}\n                            >\n                              Delete\n                            </Button>\n                          </div>\n                        )}\n                      </Card>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        )}\n        {showEditComp && (\n          <Edit\n            campData={currentCamp}\n            campId={currentCampId}\n            getCampFunc={getCamp}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Details;\n","import \"./App.css\";\nimport {HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Camps from \"./pages/Camps\";\nimport Login from \"./pages/Login\";\nimport NewCamp from \"./pages/NewCamp\";\nimport NavbarComp from \"./comps/NavbarComp\";\nimport Details from \"./pages/Details\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"./store/state.model\";\n\nfunction App() {\n  const isLoggedin = useSelector((state: State) => state.isLoggedin);\n\n  return (\n    <HashRouter basename='/'>\n    <div className=\"App\">        \n    <NavbarComp />\n      <Switch>\n        <Route path=\"/campgrounds\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/campgrounds/camps\">\n          <Camps />\n        </Route>\n        <Route path=\"/campgrounds/details/:camp\">\n          <Details />\n        </Route>\n        <Route path=\"/campgrounds/newcamp\">\n          {isLoggedin && <NewCamp />}\n          {!isLoggedin && <Redirect to=\"/campgrounds/login\" />}\n        </Route>\n        <Route path=\"/campgrounds/login\">\n          <Login />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/campgrounds\" />\n        </Route>\n      </Switch>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\nimport { Action } from \"./action.model\";\nimport { State } from \"./state.model\";\n\nconst initialState: State = {\n  showLogin: true,\n  showSignup: false,\n  showEdit: false,\n  showDetails: true,\n  loginFormData: { email: \"\", password: \"\" },\n  idToken: localStorage.getItem(\"token\") || '',\n  userId: localStorage.getItem(\"userId\")|| '',\n  isLoggedin: !!localStorage.getItem(\"token\"),\n  logginFromCamps: false,\n  allCamps: {},\n};\n\nconst reducerFunc = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case \"loginComp\":\n      return { ...state, showLogin: true, showSignup: false };\n    case \"signupComp\":\n      return { ...state, showSignup: true, showLogin: false };\n    case \"detailsComp\":\n      return { ...state, showDetails: true, showEdit: false };\n    case \"editComp\":\n      return { ...state, showEdit: true, showDetails: false };\n    case \"signupFormData\":\n      return { ...state, signUpFormData: action.payload };\n    case \"loginFormData\":\n      return { ...state, loginFormData: action.payload };\n    case \"loggedin\":\n      return { ...state, isLoggedin: true };\n    case \"loggedout\":\n      return {\n        ...state,\n        isLoggedin: false,\n        loginFormData: null,\n      };\n    case \"logginFromCampsBtn\":\n      return { ...state, logginFromCamps: true };\n    case \"logoutFromCampsBtn\":\n      return { ...state, logginFromCamps: false };\n    case \"setAllCamps\":\n      return { ...state, allCamps: action.payload };\n    case \"removeCamp\":\n      const newCampsState = state.allCamps;\n      delete newCampsState[action.payload];\n      return { ...state, allCamps: newCampsState };\n    case \"updateCamp\":\n      const updatedCampsState = state.allCamps;\n      updatedCampsState[action.payload]=action.payloadData\n      return { ...state, allCamps: updatedCampsState };\n    case \"getToken\":\n      return { ...state, idToken: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducerFunc);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store/index'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}