{"version":3,"sources":["pages/Details.module.css","pages/Home.module.css","comps/CampsCard.module.css","comps/NavbarComp.module.css","pages/NewCamp.module.css","pages/Camps.module.css","comps/LoginComp.module.css","comps/SignupComp.module.css","comps/Edit.module.css","pages/Login.module.css","pages/Home.tsx","firebase/firebase.js","comps/CampCard.tsx","pages/Camps.tsx","utils/LoginPic.jpeg","comps/LoginComp.tsx","comps/SignupComp.tsx","pages/Login.tsx","pages/NewCamp.tsx","comps/NavbarComp.tsx","comps/Edit.tsx","pages/Details.tsx","App.tsx","reportWebVitals.js","store/index.tsx","index.tsx"],"names":["module","exports","Home","className","classes","background","main","nav","ul","logolink","to","link","loginLink","middleContainer","title","message","homeButton","auth","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","database","storage","CampCard","props","useState","itemImage","setItemImage","item","dataKey","useEffect","ref","getDownloadURL","then","url","catch","error","console","log","JSON","stringify","container","containerImg","src","alt","img","containerInfo","description","location","Button","variant","size","type","button","Camps","path","setPath","isLoading","setIsLoading","dispatch","useDispatch","isLoggedin","useSelector","state","allData","allCamps","getAllCamps","a","on","snapshot","data","val","payload","titleContainer","h1","loading","Object","keys","length","map","index","allCampsData","LoginComp","email","password","inputData","setInputData","showErrMsg","setShowErrMsg","validated","setValidated","logginFromCampsBtn","logginFromCamps","history","useHistory","getInputDataHandler","e","target","id","currentTarget","value","sendDataHandler","signInWithEmailAndPassword","userCredential","idToken","user","ya","localStorage","setItem","replace","push","res","Card","style","width","card","Img","pic","Body","Title","login","errorMsg","Form","onSubmit","preventDefault","checkValidity","stopPropagation","noValidate","Group","Control","placeholder","onChange","loginBtn","signUp","onClick","SignupComp","errMsg","setErrMsg","createUserWithEmailAndPassword","signup","signupBtn","Login","showLogin","showSignup","cardContainer","NewCamp","author","getItem","authorData","loginFormData","initialData","price","imageAsFile","setImageAsFile","buttonDisabled","setButtonDisabled","newCampDataHandler","campId","Date","split","set","name","child","put","loadingCont","form","Label","htmlFor","required","as","rows","file","files","disabled","NavbarComp","expanded","setExpanded","btnHandler","Navbar","fixed","collapseOnSelect","expand","bg","navbar","Container","campgroundsLogo","Toggle","Collapse","Nav","campgroundsLink","activeClassName","active","token","removeItem","Edit","campFunc","getCampFunc","campData","defaultState","enterredData","setEnterredData","enterredDataHandler","defaultValue","update","payloadData","Details","authorEmail","params","useParams","showEditComp","showEdit","comment","inputValue","setInputValue","commButtonDisabled","setCommButtonDisabled","currentCampId","setCurrentCampId","allComments","setAllComments","comments","currentCamp","setCurrentCamp","getCamp","find","camp","allComm","comm","key","newComm","newCommentHandler","commentId","sendFormDataHandler","deleteCommentHandler","dbRef","remove","cardButtons","reviewBtn","delete","Text","DescrAuthPrice","ListGroup","ListGroupItem","reviewContainer","titleReview","textareaTitle","reviewForm","submitReviewBtn","NoCommentsMsg","commCont","reviewCard","authorReview","deleteReviewButton","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","showDetails","userId","store","createStore","action","signUpFormData","newCampsState","updatedCampsState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f809469c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Details_container__2Oj6o\",\"cardButtons\":\"Details_cardButtons__1mp0R\",\"img\":\"Details_img__2FBxc\",\"title\":\"Details_title__OugfD\",\"DescrAuthPrice\":\"Details_DescrAuthPrice__34iBY\",\"location\":\"Details_location__3rk2w\",\"reviewContainer\":\"Details_reviewContainer__3WnDJ\",\"titleReview\":\"Details_titleReview__3SPSe\",\"textareaTitle\":\"Details_textareaTitle__2cjpH\",\"textarea\":\"Details_textarea__2nz_6\",\"reviewCard\":\"Details_reviewCard__2K-Uh\",\"card\":\"Details_card__25dEN\",\"NoCommentsMsg\":\"Details_NoCommentsMsg__1eNcn\",\"warning\":\"Details_warning__EDbfE\",\"reviewBtn\":\"Details_reviewBtn__2Cpwn\",\"submitReviewBtn\":\"Details_submitReviewBtn__1mndp\",\"deleteReviewButton\":\"Details_deleteReviewButton__GZ1DP\",\"loadingCont\":\"Details_loadingCont__3ySv3\",\"loading\":\"Details_loading__3GUXD\",\"authorReview\":\"Details_authorReview__2U1bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Home_background__3HbSX\",\"middleContainer\":\"Home_middleContainer__qPjjp\",\"title\":\"Home_title__3h164\",\"message\":\"Home_message__3Y9k4\",\"homeButton\":\"Home_homeButton__QywTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CampsCard_container__e7ffi\",\"img\":\"CampsCard_img__3sxmh\",\"containerInfo\":\"CampsCard_containerInfo__3JXPw\",\"title\":\"CampsCard_title__1tu2g\",\"description\":\"CampsCard_description__38J2C\",\"location\":\"CampsCard_location__19D1b\",\"button\":\"CampsCard_button__1Jnu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavbarComp_navbar__2raUi\",\"campgroundsLogo\":\"NavbarComp_campgroundsLogo__3Wnzz\",\"campgroundsLink\":\"NavbarComp_campgroundsLink__c5qYo\",\"loginLink\":\"NavbarComp_loginLink__152zl\",\"active\":\"NavbarComp_active__KQnEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewCamp_container__1i68C\",\"form\":\"NewCamp_form__2zNpO\",\"h1\":\"NewCamp_h1__2iugb\",\"file\":\"NewCamp_file__1i_Fo\",\"button\":\"NewCamp_button__3TkYp\",\"loadingCont\":\"NewCamp_loadingCont__1UGpF\",\"loading\":\"NewCamp_loading__3SodY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Camps_container__2FW0O\",\"h1\":\"Camps_h1__7jZsE\",\"button\":\"Camps_button__3Z1wg\",\"loading\":\"Camps_loading__de6is\",\"titleContainer\":\"Camps_titleContainer__3KJQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginComp_login__2Nr3o\",\"signUp\":\"LoginComp_signUp__3pJBo\",\"errorMsg\":\"LoginComp_errorMsg__2oOW3\",\"loginBtn\":\"LoginComp_loginBtn__wWWF6\",\"card\":\"LoginComp_card__2mGIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup\":\"SignupComp_signup__1F1p1\",\"login\":\"SignupComp_login__2CWFt\",\"errorMsg\":\"SignupComp_errorMsg__3DF0s\",\"signupBtn\":\"SignupComp_signupBtn__2ghD2\",\"card\":\"SignupComp_card__1arrs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Edit_container__1s2P1\",\"form\":\"Edit_form__UvPpR\",\"h1\":\"Edit_h1__3kTf6\",\"button\":\"Edit_button__3vqQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Login_cardContainer__nypt3\",\"card\":\"Login_card__1SygN\"};","import classes from \"./Home.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div className={classes.background}>\n      <div className={classes.main}>\n        <div className={classes.nav}>\n          <ul className={classes.ul}>\n            <div className={classes.logolink}>CampGrounds</div>\n            <NavLink to=\"/campgrounds/camps\" className={classes.link}>\n              All campgrounds\n            </NavLink>\n            <NavLink to=\"/campgrounds/login\" className={classes.loginLink}>\n              Login\n            </NavLink>\n          </ul>\n        </div>\n        <div className={classes.middleContainer}>\n          <h1 className={classes.title}>CampGrounds</h1>\n          <div className={classes.message}>\n            <p>\n              Welcome to CampGrounds! <br />\n              Jump right in and explore our many campgrounds. <br /> Login or\n              sign up to share some of your own and comment on others!\n            </p>\n          </div>\n          <NavLink to=\"/campgrounds/camps\">\n            <button className={classes.homeButton}>View Campgrounds</button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { initializeApp } from \"firebase/app\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_API_AUTH,\n  databaseURL: process.env.REACT_APP_API_DATABASE_URL,\n  projectId: process.env.REACT_APP_API_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_API_STORAGE,\n  messagingSenderId: process.env.REACT_APP_API_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_API_APP_ID,\n  measurementId: process.env.REACT_APP_API_MEASUREMENT_ID,\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport const storage = firebase.storage();\n","import classes from \"./CampsCard.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"../firebase/firebase\";\nimport { propsCampCard } from \"../store/interface.model\";\n\nconst CampCard = (props: propsCampCard) => {\n  const [itemImage, setItemImage] = useState<string>();\n\n  // ----------------------------------- ITEM DATA -------------------\n  const item = props.item;\n  const dataKey = props.dataKey;\n\n  // ----------------------------------- GET IMAGE URL -------------------\n  useEffect(() => {\n    storage\n      .ref(`images/${dataKey}`)\n      .getDownloadURL()\n      .then((url) => {\n        setItemImage(url);\n      })\n      .catch((error: Error) =>\n        console.log(\n          `Getting image failed on campCard ${JSON.stringify(error.message)}`\n        )\n      );\n  }, [props.item]);\n\n  // ------------------------------------------------------------- JSX -------------------------------------------------------------\n  return (\n    <div className={classes.container}>\n      <div className={classes.containerImg}>\n        <img src={itemImage} alt=\"\" className={classes.img} />\n      </div>\n      <div className={classes.containerInfo}>\n        <div>\n          <div className={classes.title}>{item.title}</div>\n          <div className={classes.description}>{item.description}</div>\n          <div className={classes.location}>{item.location}</div>\n        </div>\n        <div>\n          <NavLink to={`/campgrounds/details/${dataKey}`}>\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              type=\"button\"\n              className={classes.button}\n            >\n              View\n            </Button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CampCard;\n","import classes from \"./Camps.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CampCard from \"../comps/CampCard\";\nimport Button from \"react-bootstrap/Button\";\nimport { CampCollection, State } from \"../store/interface.model\";\nimport { database } from \"../firebase/firebase\";\n\nconst Camps = () => {\n  const [path, setPath] = useState<string>(\"/campgrounds/login\");\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const dispatch = useDispatch();\n  const isLoggedin: boolean = useSelector((state: State) => state.isLoggedin);\n  const allData: CampCollection = useSelector((state: State) => state.allCamps);\n\n  // --------------------------------------------------------------------------- FUNCS -------------------\n\n  // ----------------- FETCH CAMPS FROM DB -----------------\n  const getAllCamps = async () => {\n    var starCountRef = database.ref(\"camps/\");\n    starCountRef.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      if (data) {\n        dispatch({ type: \"setAllCamps\", payload: data });\n      }\n      setIsLoading(false);\n    });\n\n    // *** ADD ERR HANDLING ***\n    //   let errorMessage: string = \"Getting all camps failed!\";\n    //   console.log(errorMessage);\n  };\n  // ----------------- FIRE GETALLCAMP() -----------------\n  useEffect(() => {\n    getAllCamps();\n  }, []);\n\n  // ----------------- ISOLATE CAMP KEY / DATA -----------------\n  const allCampsData = () => {\n    if (Object.keys(allData).length) {\n      return Object.keys(allData).map((item, index) => {\n        return <CampCard key={index} item={allData[item]} dataKey={item} />;\n      });\n    }\n  };\n\n  // ----------------- NAVLINK PATH -----------------\n  useEffect(() => {\n    isLoggedin\n      ? setPath(\"/campgrounds/newcamp\")\n      : setPath(\"/campgrounds/login\");\n  }, []);\n\n  // ------------------------------------------------------------- JSX -------------------------------------------------------------\n  return (\n    <div className={classes.container}>\n      <div className={classes.titleContainer}>\n        <h1 className={classes.h1}>All CampGrounds</h1>\n        <div>\n          <NavLink to={path}>\n            <Button\n              variant=\"success\"\n              size=\"lg\"\n              type=\"button\"\n              className={classes.button}\n            >\n              Add Campground\n            </Button>\n          </NavLink>\n        </div>\n      </div>\n      {isLoading ? (\n        <div className={classes.loading}>Loading...</div>\n      ) : Object.keys(allData).length === 0 ? (\n        <div className={classes.loading}>No campgrounds available.</div>\n      ) : (\n        allCampsData()\n      )}\n    </div>\n  );\n};\nexport default Camps;\n","export default __webpack_public_path__ + \"static/media/LoginPic.e44accc1.jpeg\";","import classes from \"./LoginComp.module.css\";\nimport pic from \"../utils/LoginPic.jpeg\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { State } from \"../store/interface.model\";\nimport { auth } from \"../firebase/firebase\";\n\nconst LoginComp = () => {\n  const initialData = {\n    email: \"\",\n    password: \"\",\n  };\n  const [inputData, setInputData] = useState(initialData);\n  const [showErrMsg, setShowErrMsg] = useState<boolean>(false);\n  const [validated, setValidated] = useState<boolean>(false);\n  const logginFromCampsBtn: boolean = useSelector(\n    (state: State) => state.logginFromCamps\n  );\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const errMsg = \"Invalid credentials\";\n\n  // ------------------------------------------------------------------------------------------ FUNCS -----------------------------------------\n\n  // --------------------------------------------------- GET ENTERRED DATA --------------\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (showErrMsg) {\n      setShowErrMsg(false);\n    }\n    setInputData({ ...inputData, [e.target.id]: e.currentTarget.value });\n  };\n\n  // --------------------------------------------------- FETCH: POST DAATA --------------\n  const sendDataHandler = async () => {\n    auth\n      .signInWithEmailAndPassword(inputData.email, inputData.password)\n      .then((userCredential: any) => {\n        const idToken = userCredential.user.ya;\n        dispatch({ type: \"loggedin\" });\n        dispatch({ type: \"idToken\", payload: idToken });\n        localStorage.setItem(\"token\", idToken);\n        localStorage.setItem(\"userEmail\", inputData.email);\n        if (logginFromCampsBtn) {\n          history.replace(\"/campgrounds/newcamp\");\n        } else {\n          history.push(\"/campgrounds/camps\");\n          dispatch({ type: \"logoutFromCampsBtn\" });\n        }\n        setShowErrMsg(false);\n        return inputData;\n      })\n      .catch((res) => {\n        setShowErrMsg(true);\n      });\n  };\n\n  // --------------------------------------------------- FIRE - FETCH: POST DAATA --------------\n  const getFormDataHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n    const form = e.target as HTMLTextAreaElement;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n    } else {\n      sendDataHandler();\n      dispatch({ type: \"loginFormData\", payload: inputData });\n    } \n    setValidated(true);\n  };\n\n  // --------------------------------------------------- SWITCH TO SIGNUP COMP --------------\n  const showSignupFunc = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"signupComp\" });\n  };\n\n  return (\n    <>\n      <Card style={{ width: \"27rem\" }} className={classes.card}>\n        <Card.Img variant=\"top\" src={pic} />\n        <Card.Body>\n          <Card.Title className=\"mb-4\">\n            <p className={classes.login}>Login</p>\n          </Card.Title>\n          {showErrMsg && <p className={classes.errorMsg}>{errMsg}</p>}\n          <Form onSubmit={getFormDataHandler} noValidate validated={validated}>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n              <Button\n                variant=\"success\"\n                size=\"lg\"\n                type=\"submit\"\n                className={classes.loginBtn}\n              >\n                Login\n              </Button>\n            </div>\n          </Form>\n          <p className={classes.signUp} onClick={showSignupFunc}>\n            Or sign up.\n          </p>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\nexport default LoginComp;\n","import classes from \"./SignupComp.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { State } from \"../store/interface.model\";\nimport pic from \"../utils/LoginPic.jpeg\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { auth } from \"../firebase/firebase\";\n\nconst SignupComp = () => {\n  const initialData = {\n    email: \"\",\n    password: \"\",\n  };\n  const [inputData, setInputData] = useState(initialData);\n  const [errMsg, setErrMsg] = useState<string>();\n  const [showErrMsg, setShowErrMsg] = useState<boolean>(false);\n  const [validated, setValidated] = useState<boolean>(false);\n  const logginFromCampsBtn: boolean = useSelector(\n    (state: State) => state.logginFromCamps\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // ------------------------------------------------------------------------------ FUNCS -----------------------------------------\n\n  // --------------------------------------------------- GET ENTERRED DATA --------------\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (showErrMsg) {\n      setShowErrMsg(false);\n    }\n    setInputData({ ...inputData, [e.target.id]: e.currentTarget.value });\n  };\n\n  // --------------------------------------------------- FETCH: POST DAATA --------------\n  const sendDataHandler = async () => {\n    auth\n      .createUserWithEmailAndPassword(inputData.email, inputData.password)\n      .then((userCredential: any) => {\n        const idToken = userCredential.user.ya;\n        dispatch({ type: \"loggedin\" });\n        dispatch({ type: \"idToken\", payload: idToken });\n        localStorage.setItem(\"token\", idToken);\n        localStorage.setItem(\"userEmail\", inputData.email);\n        if (logginFromCampsBtn) {\n          history.replace(\"/campgrounds/newcamp\");\n        } else {\n          history.push(\"/campgrounds/camps\");\n          dispatch({ type: \"logoutFromCampsBtn\" });\n        }\n        setShowErrMsg(false);\n        return inputData;\n      })\n      .catch((res) => {\n        if (res.message) {\n          setErrMsg(res.message);\n          setShowErrMsg(true);\n        }\n      });\n  };\n\n  // --------------------------------------------------- FIRE - FETCH: POST DAATA --------------\n  const getFormDataHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n    const form = e.target as HTMLTextAreaElement;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n    } else {\n      sendDataHandler();\n      dispatch({ type: \"loginFormData\", payload: inputData });\n    }\n    setValidated(true);\n  };\n\n  // --------------------------------------------------- SWITCH TO LOGIN COM --------------\n  const showLoginHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"loginComp\" });\n  };\n\n  return (\n    <>\n      <Card style={{ width: \"27rem\" }} className={classes.card}>\n        <Card.Img variant=\"top\" src={pic} />\n        <Card.Body>\n          <Card.Title className=\"mb-4\">\n            <p className={classes.signup}>Sign up</p>\n          </Card.Title>\n          {showErrMsg && <p className={classes.errorMsg}>{errMsg}</p>}\n          <Form onSubmit={getFormDataHandler} noValidate validated={validated}>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                onChange={getInputDataHandler}\n              />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n              <Button\n                variant=\"success\"\n                size=\"lg\"\n                type=\"submit\"\n                className={classes.signupBtn}\n              >\n                Sign up\n              </Button>\n            </div>\n          </Form>\n          <p className={classes.login} onClick={showLoginHandler}>\n            Or login.\n          </p>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\nexport default SignupComp;\n","import classes from \"./Login.module.css\";\nimport LoginComp from \"../comps/LoginComp\";\nimport SignupComp from \"../comps/SignupComp\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../store/interface.model\";\n\nconst Login = () => {\n  const showLogin: boolean = useSelector((state: State) => state.showLogin);\n  const showSignup: boolean = useSelector((state: State) => state.showSignup);\n  return (\n    <div className={classes.cardContainer}>\n      <div className={classes.card}>\n        {showLogin && <LoginComp />}\n        {showSignup && <SignupComp />}\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import classes from \"./NewCamp.module.css\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { initialNewDataType, State, File } from \"../store/interface.model\";\nimport { useHistory } from \"react-router-dom\";\nimport { database, storage } from \"../firebase/firebase\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst NewCamp = () => {\n  // -------------------------------------------------------------------- LOCAL STORAGE\n  const author: string | null = localStorage.getItem(\"userEmail\");\n  // -------------------------------------------------------------------- ROUTER\n  const history = useHistory();\n  // -------------------------------------------------------------------- REDUX\n  const authorData = useSelector((state: State) => state.loginFormData);\n\n  // -------------------------------------------------------------------- STATE\n  const initialData = {\n    title: \"\",\n    location: \"\",\n    price: \"\",\n    description: \"\",\n    author: author ? author : authorData.email,\n  };\n  const [inputData, setInputData] = useState<initialNewDataType>(initialData);\n  const [imageAsFile, setImageAsFile] = useState<File>();\n  const [validated, setValidated] = useState<boolean>(false);\n  const [buttonDisabled, setButtonDisabled] = useState<boolean>(true);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  // ------------------------------------------------------------------------------------------ FUNCS -----------------------------------------\n  // ----------------- FETCH: POST NEW CAMP -----------------\n  const newCampDataHandler = async () => {\n    setIsLoading(true);\n    const campId = `${new Date()}${\n      author?.split(\"@\")[0] ?? authorData.email.split(\"@\")[0]\n    }`;\n    const { title, location, price, description } = inputData;\n\n    database.ref(`camps/${campId}`).set({\n      title,\n      location,\n      price,\n      description,\n      author: author ? author : authorData.email,\n    });\n\n    if (imageAsFile && imageAsFile.name) {\n      const storageRef = storage.ref();\n      storageRef\n        .child(`images/${campId}`)\n        .put(imageAsFile)\n        .then((snapshot) => {\n          history.push(\"/campgrounds/camps\");\n        });\n    }\n    // *** ADD ERR HANDLING ***\n    //   let errorMessage: string = \"Adding new camp failed!\";\n    //   console.log(errorMessage);\n  };\n\n  // ------------- ON CHANGE: GET INPUT VALUE ----------------\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setButtonDisabled(false);\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n  };\n\n  // ------------- ON CHANGE: GET IMAGE ----------------\n  const getImageDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      const file: File = e.target.files[0];\n      if (file) {\n        setButtonDisabled(false);\n        setImageAsFile(file);\n      }\n    }\n  };\n\n  // ------------- ON SUBMIT: FIRE POST NEW CAMP ----------------\n  const getFormDataHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n    setButtonDisabled(true);\n    const form = e.target as HTMLTextAreaElement;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      newCampDataHandler();\n    }\n    setValidated(true);\n  };\n\n  const cancelHandler = () => {\n    history.push(\"/campgrounds/camps\");\n  };\n  // ------------------------------------------------------------- JSX -------------------------------------------------------------\n  return (\n    <>\n      <div className={classes.container}>\n        {isLoading ? (\n          <div className={classes.loadingCont}><div className={classes.loading}>Loading... This takes a while...</div></div>\n        ) : (\n          <>\n            <h1 className={classes.h1}>New CampGround</h1>\n            <Form\n              className={classes.form}\n              noValidate\n              validated={validated}\n              onSubmit={getFormDataHandler}\n            >\n              <Form.Group className=\"mb-3\">\n                <Form.Label htmlFor=\"title\">Title</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  id=\"title\"\n                  onChange={getInputDataHandler}\n                  required\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label htmlFor=\"location\">Location</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  id=\"location\"\n                  onChange={getInputDataHandler}\n                  required\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label htmlFor=\"price\">Campground price</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  id=\"price\"\n                  onChange={getInputDataHandler}\n                  required\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label htmlFor=\"description\">Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  id=\"description\"\n                  onChange={getInputDataHandler}\n                  required\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Control\n                  type=\"file\"\n                  className={classes.file}\n                  id=\"image\"\n                  onChange={getImageDataHandler}\n                  required\n                />\n              </Form.Group>\n              <div className={classes.button}>\n                <Button\n                  variant=\"success\"\n                  size=\"lg\"\n                  type=\"submit\"\n                  className=\"mb-3\"\n                  disabled={buttonDisabled}\n                >\n                  Add campground\n                </Button>\n                <Button\n                  onClick={cancelHandler}\n                  variant=\"secondary\"\n                  size=\"lg\"\n                  type=\"button\"\n                  className=\"mb-3\"\n                >\n                  Cancel\n                </Button>\n              </div>\n            </Form>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default NewCamp;\n","import classes from \"./NavbarComp.module.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../store/interface.model\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\n\nconst NavbarComp = () => {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  const isLoggedin: boolean = useSelector((state: State) => state.isLoggedin);\n\n  // --------------------------------------------------------------------------- FUNCS -----------------------------------------\n  // ----------------- LOGOUT -----------------\n  const logoutHandler = () => {\n    dispatch({ type: \"loggedout\" });\n    dispatch({ type: \"getToken\", token: null });\n    dispatch({ type: \"loginComp\" });\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userEmail\");\n    setExpanded(false);\n  };\n\n  // ----------------- SHOW LOGIN COMP -----------------\n  const loginHandler = () => {\n    dispatch({ type: \"loginComp\" });\n    setExpanded(false);\n  };\n\n  // ----------------- BTN -----------------\n  const btnHandler = () => {\n    dispatch({ type: \"logoutFromCampsBtn\" });\n    setExpanded(false);\n    dispatch({ type: \"detailsComp\" });\n\n  };\n\n  // ----------------- BURGER MENU -----------------\n  const toggleHandler = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <>\n      <Navbar\n        fixed=\"top\"\n        collapseOnSelect\n        expand=\"lg\"\n        expanded={expanded}\n        bg=\"dark\"\n        variant=\"dark\"\n        className={classes.navbar}\n      >\n        <Container>\n          <NavLink\n            to=\"/campgrounds\"\n            className={classes.campgroundsLogo}\n            onClick={btnHandler}\n          >\n            CampGrounds\n          </NavLink>\n          <Navbar.Toggle\n            aria-controls=\"basic-navbar-nav\"\n            onClick={toggleHandler}\n          />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <NavLink\n                onClick={btnHandler}\n                to=\"/campgrounds/camps\"\n                id=\"all\"\n                className={classes.campgroundsLink}\n                activeClassName={classes.active}\n              >\n                All campgrounds\n              </NavLink>\n              {!isLoggedin && (\n                <NavLink\n                  to=\"/campgrounds/login\"\n                  id=\"login\"\n                  className={classes.loginLink}\n                  activeClassName={classes.active}\n                  onClick={loginHandler}\n                >\n                  Login\n                </NavLink>\n              )}\n              {isLoggedin && (\n                <NavLink\n                  to=\"/campgrounds/login\"\n                  id=\"login\"\n                  className={classes.loginLink}\n                  activeClassName={classes.active}\n                  onClick={logoutHandler}\n                >\n                  Logout\n                </NavLink>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\nexport default NavbarComp;\n","import classes from \"./Edit.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { database } from \"../firebase/firebase\";\nimport { propsEdit } from \"../store/interface.model\";\n\n\nconst Edit = (props: propsEdit) => {\n  const campId = props.campId;\n  const campFunc = props.getCampFunc;\n  const campData = props.campData;\n  const defaultState = {\n    title: campData.title,\n    location: campData.location,\n    price: campData.price,\n    description: campData.description,\n  };\n  const [enterredData, setEnterredData] = useState(defaultState);\n  const dispatch = useDispatch();\n\n  // ------------------------------------------------------- CANCEL: REDIRECT -----------------------\n  const cancelHandler = (e: React.MouseEvent) => {\n    dispatch({ type: \"detailsComp\" });\n  };\n\n  // ------------------------------------------------------- GET ENTERRED DATA -----------------------\n  const enterredDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEnterredData({ ...enterredData, [e.target.id]: e.target.value });\n  };\n\n  const sendUpdateHandler = (e: React.MouseEvent) => {\n    let dbRef= database.ref();\n    dbRef\n      .child(`camps/${campId}`)\n      .update({\n        title: enterredData.title,\n        location: enterredData.location,\n        price: enterredData.price,\n        description: enterredData.description,\n      })\n      .then(() => {\n        dispatch({\n          type: \"updateCamp\",\n          payload: campId,\n          payloadData: {\n            title: enterredData.title,\n            location: enterredData.location,\n            price: enterredData.price,\n            description: enterredData.description,\n          },\n        });\n\n        dispatch({ type: \"detailsComp\" });\n        campFunc();\n      })\n      .catch((error: Error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <div className={classes.container}>\n        <h1 className={classes.h1}>Update CampGround</h1>\n        <Form className={classes.form}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"title\">Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"title\"\n              defaultValue={campData.title}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"location\">Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"location\"\n              defaultValue={campData.location}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label htmlFor=\"price\">Campground price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              id=\"price\"\n              defaultValue={campData.price}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-4\">\n            <Form.Label htmlFor=\"description\">Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              id=\"description\"\n              defaultValue={campData.description}\n              onChange={enterredDataHandler}\n            />\n          </Form.Group>\n          <div className={classes.button}>\n            <Button\n              onClick={sendUpdateHandler}\n              variant=\"success\"\n              size=\"lg\"\n              type=\"button\"\n              className=\"mb-3\"\n            >\n              Update\n            </Button>\n            <Button\n              onClick={cancelHandler}\n              variant=\"secondary\"\n              size=\"lg\"\n              type=\"button\"\n              className=\"mb-3\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Edit;\n","import classes from \"./Details.module.css\";\nimport Edit from \"../comps/Edit\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Camp,\n  CampCollection,\n  State,\n  CommentCollection,\n  paramsType,\n  initialDataType,\n} from \"../store/interface.model\";\nimport { database, storage } from \"../firebase/firebase\";\n\nconst Details = () => {\n  // -------------------------------------------------------------------- LOCAL STORAGE\n  const author: string | null = localStorage.getItem(\"userEmail\");\n  const authorEmail: string | null = localStorage.getItem(\"userEmail\");\n  // -------------------------------------------------------------------- ROUTER\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const params: paramsType = useParams();\n  // -------------------------------------------------------------------- REDUX\n  const authorData = useSelector((state: State) => state.loginFormData);\n  const allData: CampCollection = useSelector((state: State) => state.allCamps);\n  const showEditComp: boolean = useSelector((state: State) => state.showEdit);\n  const isLoggedin = useSelector((state: State) => state.isLoggedin);\n  // -------------------------------------------------------------------- STATE\n  const initialData = {\n    comment: \"\",\n    author: author ? author : authorData.email,\n    id: \"\",\n  };\n  const defaultData = {\n    author: \"\",\n    description: \"\",\n    location: \"\",\n    price: \"\",\n    title: \"\",\n    comments: {},\n  };\n  const [validated, setValidated] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [commButtonDisabled, setCommButtonDisabled] = useState<boolean>(false);\n  const [currentCampId, setCurrentCampId] = useState<string>(\"\");\n  const [allComments, setAllComments] = useState<initialDataType[]>([]);\n  const [itemImage, setItemImage] = useState<string>();\n  const [inputData, setInputData] = useState<initialDataType>(initialData);\n  const [currentCamp, setCurrentCamp] = useState<Camp>(defaultData);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  // ------------------------------------------------------------------------------------------ FUNCS -----------------------------------------\n\n  // ----------------- FETCH: GET CAMP -----------------\n  const getCamp = async () => {\n    var starCountRef = database.ref(\"camps/\");\n    starCountRef.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      if (data) {\n        dispatch({ type: \"setAllCamps\", payload: data });\n      } else {\n        let errorMessage: string = \"Getting all camps failed!\";\n        console.log(errorMessage);\n      }\n    });\n  };\n\n  // ----------------- FETCH: GET IMAGE -----------------\n  const getCampImage = () => {\n    storage\n      .ref(`images/${params.camp}`)\n      .getDownloadURL()\n      .then((url) => {\n        setItemImage(url);\n        setIsLoading(false);\n      })\n      .catch((error: Error) => {\n        setIsLoading(false);\n        console.log(\n          `Getting image failed on campCard ${JSON.stringify(error.message)}`\n        );\n      });\n  };\n\n  // ----------------- CURR CAMP DATA + ID -----------------\n  useEffect(() => {\n    if (Object.keys(allData).length) {\n      const campId = Object.keys(allData).find((item) => item === params.camp);\n      if (campId) {\n        setCurrentCamp(allData[campId]);\n        setCurrentCampId(campId);\n      }\n    }\n  }, [allData]);\n\n  // ----------------- FIRE FETCH: GET CAMP + IMAGE -----------------\n  useEffect(() => {\n    getCamp();\n    getCampImage();\n  }, []);\n\n  // ----------------- FETCH: DELETE CAMP + IMAGE -----------------\n  const deleteHandler = (e: React.MouseEvent) => {\n    let dbRef = database.ref();\n    setIsLoading(true);\n    dbRef.child(`camps/${params.camp}`).remove();\n    const desertRef = storage.ref().child(`images/${params.camp}`);\n    desertRef\n      .delete()\n      .then(() => {\n        dispatch({ type: \"removeCamp\", payload: params.camp });\n        history.replace(\"/campgrounds/camps\");\n      })\n      .catch((error) => {\n        console.log(\"error\");\n      });\n  };\n\n  // ----------------- SHOW EDIT COMP -----------------\n  const editHandler = (e: React.MouseEvent) => {\n    dispatch({ type: \"editComp\" });\n  };\n\n  // ---------------------------------------------------------------------------------- COMMENTS -----------------\n\n  // ------------- ON CHANGE: GET INPUT VALUE ----------------\n  const getInputDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n    setInputValue(e.target.value);\n  };\n\n  // ----------------- PUSH COMMENTS TO ARRAY -----------------\n  useEffect(() => {\n    let allComm: initialDataType[] = [];\n    const comm: CommentCollection = currentCamp.comments;\n    for (const key in comm) {\n      const newComm = { ...comm[key], id: key };\n      allComm.push(newComm);\n    }\n    setAllComments(allComm);\n  }, [currentCamp]);\n\n  // ----------------- FETCH: POST COMMENT -----------------\n  const newCommentHandler = async () => {\n    const commentId = `${new Date()}${\n      author?.split(\"@\")[0] ?? authorData.email.split(\"@\")[0]\n    }`;\n    let dbRef = database.ref();\n    dbRef.child(`camps/${currentCampId}/comments/${commentId}`).update({\n      author: author ? author : authorData.email,\n      comment: inputData.comment,\n    });\n    getCamp();\n  };\n\n  // *** ADD ERROR HANDLING ***\n  //     let errorMessage: string = \"Adding new camp failed!\";\n  //     console.log(errorMessage);\n\n  // ----------------- ON SUBMIT: FIRE POST COMMENT + CLEAR INPUT -----------------\n  const sendFormDataHandler = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    setCommButtonDisabled(true);\n    setInputValue(\"\");\n\n    await newCommentHandler();\n    setInputData(initialData);\n    setCommButtonDisabled(false);\n    const form = e.target as HTMLTextAreaElement;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n    }\n    setValidated(true);\n  };\n\n  // ----------------- ON CLICK: DELETE COMMENT -----------------\n  const deleteCommentHandler = async (e: React.MouseEvent) => {\n    let dbRef = database.ref();\n    const commentId: string = e.currentTarget.id;\n\n    await dbRef.child(`camps/${params.camp}/comments/${commentId}`).remove();\n    getCamp();\n  };\n\n  // ------------------------------------------------------------- JSX -------------------------------------------------------------\n  return (\n    <>\n      {isLoading ? (\n        <div className={classes.loadingCont}>\n          <div className={classes.loading}>Loading...</div>\n        </div>\n      ) : (\n        <div>\n          {!showEditComp && currentCamp && (\n            <div className={classes.container}>\n              <div>\n                {authorEmail === currentCamp.author && (\n                  <div>\n                    {/* ---------------------------------------------------------- TOP BTN */}\n\n                    <div className={classes.cardButtons}>\n                      <Button\n                        variant=\"primary\"\n                        type=\"button\"\n                        className={classes.reviewBtn}\n                        size=\"lg\"\n                        onClick={editHandler}\n                      >\n                        Update\n                      </Button>\n                      <Button\n                        variant=\"danger\"\n                        type=\"button\"\n                        className={classes.reviewBtn}\n                        size=\"lg\"\n                        onClick={deleteHandler}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                  </div>\n                )}\n                {/* ---------------------------------------------------------- CARD */}\n                <div className={classes.card}>\n                  <Card style={{ width: \"40rem\" }}>\n                    <Card.Img variant=\"top\" src={itemImage} />\n                    <Card.Body>\n                      <Card.Title className={classes.title}>\n                        {currentCamp.title}\n                      </Card.Title>\n                      <Card.Text className={classes.DescrAuthPrice}>\n                        {currentCamp.description}\n                      </Card.Text>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem className={classes.location}>\n                        {currentCamp.location}\n                      </ListGroupItem>\n                      <ListGroupItem className={classes.DescrAuthPrice}>\n                        Submitted by {currentCamp.author}\n                      </ListGroupItem>\n                      <ListGroupItem className={classes.DescrAuthPrice}>\n                        Price/night: ${currentCamp.price}\n                      </ListGroupItem>\n                    </ListGroup>\n                  </Card>\n                </div>\n              </div>\n              {/* -------------------------------------------------------------------------REVIEW */}\n\n              <div className={classes.reviewContainer}>\n                {isLoggedin && (\n                  <h1 className={classes.titleReview}>Leave a review</h1>\n                )}\n                {!isLoggedin && (\n                  <h1 className={classes.titleReview}>Reviews</h1>\n                )}\n\n                {isLoggedin && (\n                  <div>\n                    <p className={classes.textareaTitle}>Review text</p>\n                    <Form\n                      className={classes.reviewForm}\n                      noValidate\n                      validated={validated}\n                    >\n                      <Form.Group className=\"mb-3\">\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={3}\n                          id=\"comment\"\n                          onChange={getInputDataHandler}\n                          value={inputValue}\n                          required\n                        />\n                      </Form.Group>\n                      <Button\n                        variant=\"success\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        className={classes.submitReviewBtn}\n                        onClick={sendFormDataHandler}\n                        disabled={commButtonDisabled}\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  </div>\n                )}\n                {allComments.length <= 0 && (\n                  <div className={classes.NoCommentsMsg}>\n                    No reviews available.\n                  </div>\n                )}\n                <div className={classes.commCont}>\n                  {allComments.length > 0 &&\n                    allComments.map((item: initialDataType, index: number) => {\n                      return (\n                        <Card key={index} className={classes.reviewCard}>\n                          <Card.Title className={classes.authorReview}>\n                            {item.author}\n                          </Card.Title>\n                          <Card.Text>{item.comment}</Card.Text>\n                          {authorEmail === item.author && (\n                            <div>\n                              <Button\n                                variant=\"danger\"\n                                type=\"button\"\n                                className={classes.deleteReviewButton}\n                                onClick={deleteCommentHandler}\n                                id={item.id}\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          )}\n                        </Card>\n                      );\n                    })}\n                </div>\n              </div>\n            </div>\n          )}\n          {showEditComp && (\n            <Edit\n              campData={currentCamp}\n              campId={currentCampId}\n              getCampFunc={getCamp}\n            />\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Camps from \"./pages/Camps\";\nimport Login from \"./pages/Login\";\nimport NewCamp from \"./pages/NewCamp\";\nimport NavbarComp from \"./comps/NavbarComp\";\nimport Details from \"./pages/Details\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"./store/interface.model\";\n\nfunction App() {\n  const isLoggedin = useSelector((state: State) => state.isLoggedin);\n\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <NavbarComp />\n        <Switch>\n          <Route path=\"/campgrounds\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/campgrounds/camps\">\n            <Camps />\n          </Route>\n          <Route path=\"/campgrounds/details/:camp\">\n            <Details />\n          </Route>\n          <Route path=\"/campgrounds/newcamp\">\n            {isLoggedin && <NewCamp />}\n            {!isLoggedin && <Redirect to=\"/campgrounds/login\" />}\n          </Route>\n          <Route path=\"/campgrounds/login\">\n            <Login />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/campgrounds\" />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\nimport { State, Action } from \"./interface.model\";\n\nconst initialState: State = {\n  showLogin: true,\n  showSignup: false,\n  showEdit: false,\n  showDetails: true,\n  loginFormData: { email: \"\", password: \"\" },\n  idToken: localStorage.getItem(\"token\") || \"\",\n  userId: localStorage.getItem(\"userId\") || \"\",\n  isLoggedin: !!localStorage.getItem(\"token\"),\n  logginFromCamps: false,\n  allCamps: {},\n};\n\nconst reducerFunc = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case \"loginComp\":\n      return { ...state, showLogin: true, showSignup: false };\n    case \"signupComp\":\n      return { ...state, showSignup: true, showLogin: false };\n    case \"detailsComp\":\n      return { ...state, showDetails: true, showEdit: false };\n    case \"editComp\":\n      return { ...state, showEdit: true, showDetails: false };\n    case \"signupFormData\":\n      return { ...state, signUpFormData: action.payload };\n    case \"loginFormData\":\n      return { ...state, loginFormData: action.payload };\n    case \"loggedin\":\n      return { ...state, isLoggedin: true };\n    case \"loggedout\":\n      return {\n        ...state,\n        isLoggedin: false,\n        loginFormData: null,\n      };\n    case \"logginFromCampsBtn\":\n      return { ...state, logginFromCamps: true };\n    case \"logoutFromCampsBtn\":\n      return { ...state, logginFromCamps: false };\n    case \"setAllCamps\":\n      return { ...state, allCamps: action.payload };\n    case \"removeCamp\":\n      const newCampsState = state.allCamps;\n      delete newCampsState[action.payload];\n      return { ...state, allCamps: newCampsState };\n    case \"updateCamp\":\n      const updatedCampsState = state.allCamps;\n      updatedCampsState[action.payload] = action.payloadData;\n      return { ...state, allCamps: updatedCampsState };\n    case \"getToken\":\n      return { ...state, idToken: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducerFunc);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}